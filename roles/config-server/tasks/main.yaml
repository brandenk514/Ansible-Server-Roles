---
- name: Set timezone to US Pacific
  community.general.timezone:
    name: America/Los_Angeles

- name: Update Message of the Day
  ansible.builtin.template:
    src: roles/templates/motd
    dest: /etc/motd
    owner: root
    group: root
    mode: "0600"
    backup: true

- name: Install additional packages
  ansible.builtin.apt:
    pkg:
      - qemu-guest-agent
      - htop
      - ufw
      - nano
      - iputils-ping
      - dnsutils
      - chrony
    state: present

- name: Copy drop-in Chrony sources file
  ansible.builtin.copy:
    src: roles/templates/uac-ntp.sources
    dest: /etc/chrony/sources.d/uac-ntp.sources
    owner: root
    group: root
    mode: '0644'
  notify: Restart Chrony service

- name: Update sshd configuration safely, avoid locking yourself out
  ansible.builtin.template:
    src: roles/templates/sshd_config
    dest: /etc/ssh/sshd_config.d/99-uac-sshd.conf
    owner: root
    group: root
    mode: "0600"
    validate: /usr/sbin/sshd -t -f %s
    backup: true
  notify: Restart_sshd

- name: Update sshd configuration safely, avoid locking yourself out
  ansible.builtin.template:
    src: roles/templates/99-sudoers
    dest: /etc/sudoers.d/99-sudoers
    owner: root
    group: root
    mode: "0600"
    validate: /usr/sbin/sshd -t -f %s
    backup: true
  notify: Restart_sshd 

- name: Check if swapfile exists
  ansible.builtin.stat:
    path: /swapfile
  register: swapfile_stat

- name: Create a swap file using fallocate
  ansible.builtin.command: fallocate -l 4G /swapfile
  args:
    creates: /swapfile
  when: not swapfile_stat.stat.exists

- name: Set up swap file with correct permissions
  ansible.builtin.file:
    path: /swapfile
    owner: root
    group: root
    mode: '0600'
  when: not swapfile_stat.stat.exists

- name: Format the file as swap
  ansible.builtin.command: mkswap /swapfile
  when: not swapfile_stat.stat.exists

- name: Enable the swap file
  ansible.builtin.command: swapon /swapfile
  when: not swapfile_stat.stat.exists

- name: Add swap file to /etc/fstab
  ansible.posix.mount:
    name: none
    src: /swapfile
    fstype: swap
    opts: sw
    dump: 0
    passno: 0
    state: present
  when: not swapfile_stat.stat.exists

- name: Verify swap is active
  ansible.builtin.command: swapon --show
  register: swap_output
  when: not swapfile_stat.stat.exists

- name: Display swap info
  ansible.builtin.debug:
    var: swap_output.stdout
  when: not swapfile_stat.stat.exists

- name: Check for reboot-required file
  ansible.builtin.stat:
    path: /var/run/reboot-required
  register: reboot_required_file

- name: Reboot the box
  ansible.builtin.reboot:
    msg: "Reboot initiated by AWX for kernel updates"
    connect_timeout: 5
    reboot_timeout: 300
    post_reboot_delay: 30
    test_command: uptime
  when: reboot_required_file.stat.exists
