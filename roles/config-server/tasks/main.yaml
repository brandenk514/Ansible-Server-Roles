---
- name: Set timezone to US Pacific
  community.general.timezone:
    name: America/Los_Angeles

- name: Update Message of the Day
  ansible.builtin.template:
    src: motd
    dest: /etc/motd
    owner: root
    group: root
    mode: "0600"
    backup: true

- name: Install additional packages
  ansible.builtin.apt:
    pkg:
      - qemu-guest-agent
      - htop
      - ufw
      - nano
      - iputils-ping
      - dnsutils
    state: present

- name: Gather facts about installed packages
  ansible.builtin.package_facts:

- name: Removing UFW from docker installs
  ansible.builtin.apt:
    name: ufw
    state: absent
  when: "'docker-ce' in ansible_facts.packages"

- name: Update sshd configuration safely, avoid locking yourself out
  ansible.builtin.template:
    src: sshd_config
    dest: /etc/ssh/sshd_config.d/00-uac-sshd.conf
    owner: root
    group: root
    mode: "0600"
    validate: /usr/sbin/sshd -t -f %s
    backup: true

- name: 'Check if /etc/cloud/ exists'
  ansible.builtin.stat:
    path: '/etc/cloud/'
  register: etc_cloud_folder

- name: 'Generate /etc/cloud/cloud-init.disabled'
  ansible.builtin.copy:
    dest: '/etc/cloud/cloud-init.disabled'
    content: 'disabled by ansible\n'
    owner: 'root'
    group: 'root'
    mode: '0644'
  when:
    - 'etc_cloud_folder.stat.exists'

- name: Allow SSH access from trusted subnets
  community.general.ufw:
    state: enabled
    rule: allow
    proto: tcp
    port: '22'
    src: '{{ item }}'
  loop:
    - 192.168.105.0/24
    - 192.168.100.0/24
  when: "'docker-ce' not in ansible_facts.packages"

- name: Check if swapfile exists
  ansible.builtin.stat:
    path: /swapfile
  register: swapfile_stat

- name: Create a swap file using fallocate
  ansible.builtin.command: fallocate -l 4G /swapfile
  args:
    creates: /swapfile
  when: not swapfile_stat.stat.exists

- name: Set up swap file with correct permissions
  ansible.builtin.file:
    path: /swapfile
    owner: root
    group: root
    mode: '0600'
  when: not swapfile_stat.stat.exists

- name: Format the file as swap
  ansible.builtin.command: mkswap /swapfile
  when: not swapfile_stat.stat.exists

- name: Enable the swap file
  ansible.builtin.command: swapon /swapfile
  when: not swapfile_stat.stat.exists

- name: Add swap file to /etc/fstab
  ansible.posix.mount:
    name: none
    src: /swapfile
    fstype: swap
    opts: sw
    dump: 0
    passno: 0
    state: present
  when: not swapfile_stat.stat.exists

- name: Verify swap is active
  ansible.builtin.command: swapon --show
  register: swap_output
  when: not swapfile_stat.stat.exists

- name: Display swap info
  ansible.builtin.debug:
    var: swap_output.stdout
  when: not swapfile_stat.stat.exists

- name: Check for reboot-required file
  ansible.builtin.stat:
    path: /var/run/reboot-required
  register: reboot_required_file

- name: Reboot the box
  ansible.builtin.reboot:
    msg: "Reboot initiated by AWX for kernel updates"
    connect_timeout: 5
    reboot_timeout: 300
    post_reboot_delay: 30
    test_command: uptime
  when: reboot_required_file.stat.exists
