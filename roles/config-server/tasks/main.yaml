---
- name: Set NTP on
  command: timedatectl set-ntp on

- name: Set timezone to US Pacific
  community.general.timezone:
    name: America/Los_Angeles

- name: Update Message of the Day
  ansible.builtin.template:
    src: motd
    dest: /etc/motd
    owner: root
    group: root
    mode: "0600"
    backup: true

- name: Create timesyncd.conf.d 
  ansible.builtin.file:
    path: /etc/systemd/timesyncd.conf.d/
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Update NTP sources for timesyncd
  ansible.builtin.template:
    src: uac-ntp.conf
    dest: /etc/systemd/timesyncd.conf.d/50-uac-timesyncd.conf
    owner: root
    group: root
    mode: "0600"
    backup: true

- name: Install additional packages
  ansible.builtin.apt:
    pkg:
      - qemu-guest-agent
      - htop
      - ufw
      - nano
      - iputils-ping
      - dnsutils
    state: present

- name: Check if Docker service is installed
  ansible.builtin.systemd:
    name: docker
    state: started
  register: docker_service_status
  ignore_errors: yes

- name: Display message if Docker service is running
  debug:
    msg: "Docker is installed and running."
  when: docker_service_status.changed == false

- name: Display message if Docker service is not found or not running
  debug:
    msg: "Docker is not installed or not running."
  when: docker_service_status.failed or docker_service_status.changed

- name: Removing UFW from docker installs
  ansible.builtin.apt:
    name: ufw
    state: absent
  when: docker_version_output.rc == 0

- name: Update sshd configuration safely, avoid locking yourself out
  ansible.builtin.template:
    src: sshd_config
    dest: /etc/ssh/sshd_config.d/00-uac-sshd.conf
    owner: root
    group: root
    mode: "0600"
    validate: /usr/sbin/sshd -t -f %s
    backup: true

- name: 'Check if /etc/cloud/ exists'
  ansible.builtin.stat:
    path: '/etc/cloud/'
  register: etc_cloud_folder

- name: 'Generate /etc/cloud/cloud-init.disabled'
  ansible.builtin.copy:
    dest: '/etc/cloud/cloud-init.disabled'
    content: 'disabled by ansible\n'
    owner: 'root'
    group: 'root'
    mode: '0644'
  when:
    - 'etc_cloud_folder.stat.exists'

- name: Allow SSH access from trusted subnets
  community.general.ufw:
    state: enabled
    rule: allow
    proto: tcp
    port: '22'
    src: '{{ item }}'
  loop:
    - 192.168.105.0/24
    - 192.168.100.0/24
  when: docker_version_output.rc != 0

- name: Check if fallocate is available
  command: which fallocate
  register: fallocate_check
  failed_when: fallocate_check.rc != 0

- name: Create a swap file using fallocate
  command: fallocate -l 4G /swapfile
  args:
    creates: /swapfile
  when: fallocate_check.stdout is not empty

- name: Verify swap file was created
  stat:
    path: /swapfile
  register: swapfile_stat
  failed_when: not swapfile_stat.stat.exists

- name: Set up swap file with correct permissions
  file:
    path: /swapfile
    owner: root
    group: root
    mode: '0600'

- name: Format the file as swap
  command: mkswap /swapfile
  when: swapfile_stat.stat.exists

- name: Enable the swap file
  command: swapon /swapfile
  when: swapfile_stat.stat.exists

- name: Add swap file to /etc/fstab
  mount:
    name: none
    src: /swapfile
    fstype: swap
    opts: sw
    dump: 0
    passno: 0
    state: present
  when: swapfile_stat.stat.exists

- name: Verify swap is active
  command: swapon --show
  register: swap_output

- name: Display swap info
  debug:
    var: swap_output.stdout

- name: Check for reboot-required file
  stat:
    path: /var/run/reboot-required
  register: reboot_required_file

- name: Reboot the box
  reboot:
    msg: "Reboot initiated by AWX for kernel updates"
    connect_timeout: 5
    reboot_timeout: 300
    post_reboot_delay: 30
    test_command: uptime
  when: reboot_required_file.stat.exists
